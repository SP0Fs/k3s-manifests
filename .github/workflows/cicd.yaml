name: CI/CD

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**.md"
jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v2

      - name: Create Kubeconfig
        run: |
          mkdir ${HOME}/.kube
          echo ${{ secrets.KUBECONFIG }} | base64 -d > ${HOME}/.kube/config

      - name: Decrypt secrets
        run: |
          scripts/gpg-decrypt.sh config/ "${{ secrets.GPG_PASSPHRASE }}"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.6

      - name: Terraform Format
        id: fmt
        run: |
          terraform fmt -check

      - name: Terraform Init
        id: init
        run: |
          terraform init

      - name: Terraform Validate
        id: validate
        run: |
          terraform validate

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false -no-color
        continue-on-error: true

      - name: Terraform Apply
        if: github.event_name != 'pull_request' && steps.plan.outcome != 'failure'
        run: terraform apply -auto-approve -input=false

      - name: Update Pull Request
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        continue-on-error: true
        with:
          message: |
            #### Terraform Format and Style 🖌`${{ steps.fmt.outcome }}`
            #### Terraform Initialization ⚙️`${{ steps.init.outcome }}`
            #### Terraform Plan 📖`${{ steps.plan.outcome }}`
            #### Terraform Validation 🤖`${{ steps.validate.outcome }}`

            <details><summary>Show Plan</summary><code>
            ${{ steps.plan.outputs.stdout }}
            </code></details>

            *Pushed by: @${{ github.actor }}, Action: `${{ github.event_name }}`*

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
